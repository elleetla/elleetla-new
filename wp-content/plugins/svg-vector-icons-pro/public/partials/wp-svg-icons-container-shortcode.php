<?php/** * Function to process our shortcode and render our WP SVG Icon *  * @link       http://www.evan-herman.com/wordpress-plugin/wp-svg-icons/ * @since      3.0.0 * * @package    WP_SVG_Icons * @subpackage WP_SVG_Icons/public * */// Add [wp-svg-icons-hover-container][/wp-svg-icons-hover-container] Shortcodefunction process_icon_hover_container_shortcode( $atts , $content = null ) {	// ExtractAttributes	extract( shortcode_atts(		array(			'icon' => '',			'custom_icon' => '',			'container' => '1-A',			'icon_size' => '',			'class' => '',			'link' => '',			'new_tab' => '',			'icon_color' => '',			'container_bg' => '',			'icon_hover_color' => '',			'container_hover_bg' => '',			'animation' => '',			'animate_on' => '',			'align' => '', // float the container		), $atts, 'wp-svg-icons-container-atts' )	);		static $i = 0;	$i++;		if( empty( $icon ) && empty( $custom_icon ) ) {		return __( 'Whoops! It looks like you forgot to specify your icon!' , 'wp-svg-icons' ); 	} else if ( !empty( $icon ) && !empty( $custom_icon ) ) {		return __( 'Whoops! It looks like you set an icon and a custom icon. You can only specify one.' , 'wp-svg-icons' ); 	}		$container_array = explode( '-' , $container );	if( isset( $container_array[1] ) ) {		$container_number = intval( trim( $container_array[0] ) );		$container_letter = strtolower( trim( $container_array[1] ) );	} else {		$container_number = 'no-';		$container_letter = 'animation';	}		$parent_container_classes = array();	$class_array = array();	$data_attr_array = array();		$parent_container_classes[] = !empty( $class ) ? $class : '';		$container_class_for_animation = 'hi-icon-wrap-'.$container_number;		// create onmouseover / onmouse leave variables	$mouseenter_icon_color = "this.style.color='".$icon_hover_color."'";	$mouseleave_icon_color = "this.style.color='".$icon_color."'";		$align = empty( $align ) ? '' : $align;		if( !empty( $animation ) ) {		// animate.css 		// @since v1.1.3		wp_enqueue_style( 'animate.css' , '//cdnjs.cloudflare.com/ajax/libs/animate.css/3.2.3/animate.min.css' );		wp_enqueue_script( 'waypoint.js' , 'https://cdnjs.cloudflare.com/ajax/libs/waypoints/4.0.0/jquery.waypoints.min.js', array( 'jquery' ), 'all', true );		wp_enqueue_script( 'wp-svg-icons-frontend.js' , plugin_dir_url( __FILE__ ) . '../js/wp-svg-icons-frontend.min.js', array( 'jquery', 'waypoint.js' ), 'all', true );		$parent_container_classes[] = 'animated-icon';		if( $animate_on == 'load' ) {			// push the animation class to the parent classes array			// to play on load			$parent_container_classes[] = $animation;		} else if( $animate_on == 'hover' ) {			$data_attr_array[] = 'data-animate-on="hover"';		} else if( $animate_on == 'click' ) {			$data_attr_array[] = 'data-animate-on="click"';		} else if( $animate_on == 'scroll' ) {			$data_attr_array[] = 'data-animate-on="scroll"';		}		$data_attr_array[] = 'data-animation="'.$animation.'"';	} else {		$animation = '';	}		$content = empty( $content ) ? '' : $content;		if( !empty( $icon ) ) {		$class_array[] = 'wp-svg-icon wp-svg-'.$icon.' '.$icon;		// load container/hover effect styles		wp_enqueue_style( 'wp-svg-icon-container-styles' , plugin_dir_url( __FILE__ ) . '../css/wordpress-svg-icons-hover-styles.min.css' );	} else if ( !empty( $custom_icon ) ) {		// load container/hover effect styles		wp_enqueue_style( 'wp-svg-icon-container-styles' , plugin_dir_url( __FILE__ ) . '../css/wordpress-svg-icons-hover-styles.min.css' );		$class_array[] = 'wp-svg-icon wp-svg-custom-'.$custom_icon.' '.$custom_icon;	}		// hover styles...	// should figure out a way to properly enqueue these	// in the <head> - but for now...		// here we output styles specific to each container...		if( $container != 'none' ) {			switch( $container_number ) {				default:				case '1':					?>					<style>						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon {							background: <?php echo $container_bg; ?> !important;							<?php 								if( str_replace( 'px', '', $icon_size ) > 60 ) {							?>								height: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;								width: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;							<?php								}							?>						}						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:before {							font-size: <?php echo $icon_size; ?> !important;							<?php 								if( str_replace( 'px', '', $icon_size ) > 60 ) {							?>									line-height: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;							<?php 								} 							?>						}						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:after {							box-shadow: 0 0 0 4px <?php echo $container_bg; ?> !important;						}						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:hover {							background: <?php echo $container_hover_bg; ?> !important;						}					</style>					<?php					break;				case '2':						?>					<style>						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon {							box-shadow: 0 0 0 3px <?php echo $container_bg; ?> !important;							<?php 								if( str_replace( 'px', '', $icon_size ) > 60 ) {							?>								height: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;								width: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;							<?php								}							?>						}							.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:before {							font-size: <?php echo $icon_size; ?> !important;							<?php 								if( str_replace( 'px', '', $icon_size ) > 60 ) {							?>									line-height: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;							<?php 								} 							?>						}						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:after {							background: <?php echo $container_bg; ?> !important;						}					</style>					<?php					break;				case '3':						?>					<style>						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon {							box-shadow: 0 0 0 4px <?php echo $container_bg; ?> !important;							<?php if( $container_letter == 'a' ) { ?>								background: <?php echo $container_bg; ?> !important;							<?php } else { ?>								background: transparent !important;							<?php } ?>							<?php 								if( str_replace( 'px', '', $icon_size ) > 60 ) {							?>								height: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;								width: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;							<?php								}							?>						}							.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:hover {							background: transparent !important;						}						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:before {							font-size: <?php echo $icon_size; ?> !important;							<?php 								if( str_replace( 'px', '', $icon_size ) > 60 ) {							?>									line-height: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;							<?php 								} 							?>						}						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:after {							background: <?php echo $container_bg; ?> !important;						}					</style>					<?php					break;				case '4':						?>					<style>						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon {							box-shadow: 0 0 0 4px <?php echo $container_bg; ?> !important;							<?php 								if( str_replace( 'px', '', $icon_size ) > 60 ) {							?>								height: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;								width: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;							<?php								}							?>						}							.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:before {							font-size: <?php echo $icon_size; ?> !important;							<?php 								if( str_replace( 'px', '', $icon_size ) > 60 ) {							?>									line-height: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;							<?php 								} 							?>						}						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:after {							background: transparent !important;							border: 4px dashed <?php echo $container_bg; ?> !important;						}						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:hover {							box-shadow: 0 0 0 4px transparent !important;						}					</style>					<?php					break;									case '5':						?>					<style>						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon {							background: <?php echo $container_bg; ?> !important;							<?php 								if( str_replace( 'px', '', $icon_size ) > 60 ) {							?>								height: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;								width: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;							<?php								}							?>						}							.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:after {							box-shadow: 0 0 0 4px <?php echo $container_bg; ?> !important;						}						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:before {							font-size: <?php echo $icon_size; ?> !important;							<?php 								if( str_replace( 'px', '', $icon_size ) > 60 ) {							?>									line-height: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;							<?php 								} 							?>						}						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:hover {							box-shadow: 0 0 0 8px <?php echo eherman_hex2rgba( $container_hover_bg , .25 ); ?> !important;						}					</style>					<?php					break;				case '6':						?>					<style>						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon {							box-shadow: 0 0 0 4px <?php echo $container_bg; ?> !important;							<?php 								if( str_replace( 'px', '', $icon_size ) > 60 ) {							?>								height: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;								width: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;							<?php								}							?>						}							.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:hover {							background: <?php echo $container_hover_bg; ?> !important;							box-shadow: 0 0 0 4px <?php echo $container_hover_bg; ?> !important;						}						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:before {							font-size: <?php echo $icon_size; ?> !important;							<?php 								if( str_replace( 'px', '', $icon_size ) > 60 ) {							?>									line-height: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;							<?php 								} 							?>						}					</style>					<?php					break;				case '7':						?>					<style>						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon {							background: <?php echo $container_bg; ?> !important;							box-shadow: 0 0 0 4px <?php echo $container_bg; ?> !important;							<?php 								if( str_replace( 'px', '', $icon_size ) > 60 ) {							?>								height: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;								width: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;							<?php								}							?>						}							.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:after {							box-shadow: 0 0 0 <?php echo $container_bg; ?> !important;						}						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:hover {							background: <?php echo $container_hover_bg; ?> !important;							box-shadow: 0 0 0 4px <?php echo $container_hover_bg; ?> !important;						}						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:hover:after {							box-shadow: 3px 3px 0 <?php echo $container_hover_bg; ?> !important;						}						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:before {							font-size: <?php echo $icon_size; ?> !important;							<?php 								if( str_replace( 'px', '', $icon_size ) > 60 ) {							?>									line-height: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;							<?php 								} 							?>						}					</style>					<?php					break;								case '8':						?>					<style>						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon {							background: transparent !important;							box-shadow: 0 0 0 4px <?php echo $container_bg; ?> !important;							<?php 								if( str_replace( 'px', '', $icon_size ) > 60 ) {							?>								height: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;								width: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;							<?php								}							?>						}							.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:after {							box-shadow: 0 0 0 <?php echo $container_bg; ?> !important;						}						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:hover {							background: <?php echo $container_hover_bg; ?> !important;							box-shadow: 0 0 0 4px <?php echo $container_hover_bg; ?> !important;						}						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:hover:after {							box-shadow: 3px 3px 0 <?php echo $container_hover_bg; ?> !important;						}						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:before {							font-size: <?php echo $icon_size; ?> !important;							<?php 								if( str_replace( 'px', '', $icon_size ) > 60 ) {							?>									line-height: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;							<?php 								} 							?>						}					</style>					<?php					break;				case '9':						?>					<style>							.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon {							<?php 								if( str_replace( 'px', '', $icon_size ) > 60 ) {							?>								height: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;								width: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;							<?php								}							?>						}						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:after {							box-shadow: 0 0 0 3px <?php echo $container_bg; ?> !important;						}						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:hover {							<?php if( $container_letter == 'a' ) { ?>									box-shadow: 0 0 0 8px <?php echo $container_hover_bg; ?> !important;							<?php } else { ?>								box-shadow: 0 0 0 8px <?php echo eherman_hex2rgba( $container_hover_bg , .20 ); ?> !important;							<?php } ?>						}						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:hover:after {							box-shadow: 0 0 0 3px <?php echo $container_hover_bg; ?> !important;						}						.hi-icon-wrap-<?php echo $i; ?> .wp-svg-icon:before {							font-size: <?php echo $icon_size; ?> !important;							<?php 								if( str_replace( 'px', '', $icon_size ) > 60 ) {							?>									line-height: <?php echo ( str_replace( 'px', '', $icon_size ) + 75 ); ?>px !important;							<?php 								} 							?>						}					</style>					<?php					break;			}		}			if( !empty( $link ) ) {		$new_tab = !empty( $new_tab ) ? 'target="_blank"' : '';		return '<div class="hi-icon-wrap hi-icon-wrap-'.$i.' hi-icon-wrap hi-icon-effect-'.$container_number.' hi-icon-effect-'.$container_number.$container_letter. ' ' . $align . ' ' . implode( ' ' , $parent_container_classes ) . '" ' . implode( ' ' , $data_attr_array ) .'>				<a href="'.esc_url( $link ).'" title="'.esc_url( $link ).'" '.$new_tab.' class="'.implode( ' ' , $class_array ).'" style="color:'.$icon_color.';" onmouseover="'.$mouseenter_icon_color.'" onmouseleave="'.$mouseleave_icon_color.'"></a>				'.$content.'			</div>';	} else {		return '<div class="hi-icon-wrap hi-icon-wrap-'.$i.' hi-icon-wrap hi-icon-effect-'.$container_number.' hi-icon-effect-'.$container_number.$container_letter. ' ' . $align . ' ' . implode( ' ' , $parent_container_classes )  . '" ' . implode( ' ' , $data_attr_array ) . '>				<a href="#" onclick="return false;" class="'.implode( ' ' , $class_array ).'" style="color:'.$icon_color.';" onmouseover="'.$mouseenter_icon_color.'" onmouseleave="'.$mouseleave_icon_color.'"></a>				'.$content.'			</div>';	}		}add_shortcode( 'wp-svg-icons-hover-container', 'process_icon_hover_container_shortcode' );function eherman_hex2rgba($color, $opacity = false) { 	$default = 'rgb(0,0,0)'; 	//Return default if no color provided	if(empty($color))          return $default;  	//Sanitize $color if "#" is provided         if ($color[0] == '#' ) {        	$color = substr( $color, 1 );        }         //Check if color has 6 or 3 characters and get values        if (strlen($color) == 6) {                $hex = array( $color[0] . $color[1], $color[2] . $color[3], $color[4] . $color[5] );        } elseif ( strlen( $color ) == 3 ) {                $hex = array( $color[0] . $color[0], $color[1] . $color[1], $color[2] . $color[2] );        } else {                return $default;        }         //Convert hexadec to rgb        $rgb =  array_map('hexdec', $hex);         //Check if opacity is set(rgba or rgb)        if($opacity){        	if(abs($opacity) > 1)        		$opacity = 1.0;        	$output = 'rgba('.implode(",",$rgb).','.$opacity.')';        } else {        	$output = 'rgb('.implode(",",$rgb).')';        }         //Return rgb(a) color string        return $output;}