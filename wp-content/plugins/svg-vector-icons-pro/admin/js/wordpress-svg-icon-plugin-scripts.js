/* 	WP SVG ICON PLUGIN SCRIPTS 	Compiled by Evan Herman - www.Evan-Herman.com	*/jQuery(document).ready( function() {		// select default icon element wrapper on initial page load	iconWrapperClick( jQuery( this ) , localized_data.default_icon_element );		var interval = null;	var x = 0;	function check_thick() {		interval = setInterval(function() {			if( jQuery( '#TB_ajaxContent' ).is( ':visible' ) ) {				x = 0;				if( jQuery( '.icon-wrapper' ).hasClass( 'selected-element-wrap' ) ) {						return;				}				jQuery( '.custom-pack-tab' ).removeAttr( 'style' );				iconWrapperClick( jQuery( this ) , localized_data.default_icon_element );				jQuery( '.element_selection_container' ).find( jQuery( '.icon-wrapper[alt="' + localized_data.default_icon_element + '"]' ) ).addClass( 'selected-element-wrap' );			} else {				x = 1;			}		}, 50);	};	// run our check thickbox function	// on initial page load	check_thick();		// if a custom icon pack is not installed,	// lets make sure that the custom tab remains hidden	if( localized_data.custom_pack_active != 'true' ) {		setInterval(function() {			if( jQuery( '#TB_ajaxContent' ).is( ':visible' ) ) {				jQuery( '.custom-pack-tab' ).hide();			}		}, 50);	}		// when a user clicks on an icon,	// load'er up to the preview box	function buttonClick() {				var glyphUnicode =  jQuery( 'input[type=text].glyph_unicode', this ).val();		var iconClass = jQuery( this ).find( 'div' ).attr( 'class' ).replace( 'fs1' , '' );		var selectedIconWrapper = jQuery( '.selected-element-wrap' ).attr( 'alt' );					jQuery('.glyph').removeClass('selected');							jQuery(this).addClass('selected');				jQuery('.copy_paste_input').text('[wp-svg-icons icon="'+iconClass.trim()+'" wrap="'+selectedIconWrapper+'"]');		jQuery('input[type=text].expansion_glyph_unicode').css('background-color','#eee');		jQuery('input[type=text].glyph_unicode').css('background-color','#eee');		jQuery('input[type=text].glyph_unicode', this).css('background-color','#FF8000', 'font-color', '#000');		jQuery('.wp-svg-icon-preview').html('<span class="wp-svg-iconset1-preview iconClass" data-icon="'+glyphUnicode+'" style="display:none;"></div>');		jQuery( '.wp-svg-iconset1-preview' ).fadeIn( 'fast' );					// Fade in the insert icon button		if( jQuery( '#TB_ajaxContent' ).is( ':visible' ) ) {			jQuery( '.insert-wp-svg-icon' ).fadeIn();			jQuery('#TB_ajaxContent').animate({ scrollTop: 0 }, 'slow'); // scroll thickbox back up		} else {			jQuery('html, body').animate({ scrollTop: 0 }, 'slow'); // scroll html body		}				if( jQuery( '#advanced-shortcode-attr-toggle' ).hasClass( 'yes-adv-attr' ) ) {			build_the_icon_shortcode( jQuery( '#advanced-shortcode-attr-toggle' ) );		} else if ( jQuery( '#hover-styles-toggle' ).hasClass( 'yes-adv-attr' ) ) {			buildIconContainerShortCode();		}					// fade in advanced attributes button		jQuery( '#advanced-attr-toggle-list-item' ).fadeIn();		jQuery( '#hover-styles-toggle-list-item' ).fadeIn();	};			function iconWrapperClick( button, element ) {				if ( jQuery( '#hover-styles-toggle' ).hasClass( 'yes-adv-attr' ) ) {			// just toggle the button...			jQuery( '.icon-wrapper' ).removeClass( 'selected-element-wrap' );			jQuery( button ).addClass( 'selected-element-wrap' );		} else {				if ( jQuery( '.custom-pack-tab' ).hasClass( 'nav-tab-active' ) ) {						var active_tab = 'custom';				} else {					var active_tab = 'default';				}				var iconClass = jQuery( '.wp-svg-iconset1-all-glyphs' ).find( '.glyph-demo.selected' ).find( 'div' ).attr( 'class' );				// if the icon class is undefined, we're probably on the custom pack tab				if( iconClass === undefined ) {					// reset up the variable					var iconClass = jQuery( '.custom-pack-container-ajax' ).find( '.glyph.selected' ).find( 'span:first-child' ).attr( 'class' );				}				jQuery( '.icon-wrapper' ).removeClass( 'selected-element-wrap' );				jQuery( button ).addClass( 'selected-element-wrap' );				var selectedIconWrapper = element;				if( iconClass ) {					iconClass = iconClass.replace( 'fs1' , '' );					if( active_tab == 'custom' ) {						var newIconClass = iconClass.replace( 'wp-svg-custom-' , '' );						// swap out the example container for the new element						jQuery( '.copy_paste_input' ).text('[wp-svg-icons custom_icon="'+newIconClass.trim()+'" wrap="'+selectedIconWrapper+'"]');					} else {						// swap out the example container for the new element						jQuery( '.copy_paste_input' ).text('[wp-svg-icons icon="'+iconClass.trim()+'" wrap="'+selectedIconWrapper+'"]');					}				} else {					// no icon was selected yet...but we can still add our wrap					// swap out the example container for the new element					jQuery( '.copy_paste_input' ).text('[wp-svg-icons icon="" wrap=""]');				}		}	};		jQuery( '.element_selection_container' ).find( jQuery( '.icon-wrapper[alt="' + localized_data.default_icon_element + '"]' ) ).addClass( 'selected-element-wrap' );		/* Change selected icon wrapper */	jQuery( 'body' ).on( 'click' , '.icon-wrapper ' , function() {		iconWrapperClick( jQuery( this ) , jQuery( this ).attr( 'alt' ) );		if ( jQuery( '#hover-styles-toggle' ).hasClass( 'yes-adv-attr' ) ) {				buildIconContainerShortCode();		} else {			build_the_icon_shortcode( jQuery( '#advanced-shortcode-attr-toggle' ) );		}	});		/* Change the icon */		jQuery( 'body' ).on( 'click' , '.glyph-demo' , buttonClick );				// toggle advanced attr shortcode	jQuery( 'body' ).on( 'click' , '#advanced-shortcode-attr-toggle' , function() {		build_the_icon_shortcode( jQuery( this ) );	});		// type in a new classname to the icon shortcode	jQuery( 'body' ).on( 'change' , '#icon-class-names-input' , function() {		build_the_icon_shortcode( jQuery( '#advanced-shortcode-attr-toggle' ) );	});		// type in a new link URL	jQuery( 'body' ).on( 'change' , '#icon-link' , function() {		build_the_icon_shortcode( jQuery( '#advanced-shortcode-attr-toggle' ) );	});		// override custom icon size	jQuery( 'body' ).on( 'change' , '#icon-size-input' , function() {		build_the_icon_shortcode( jQuery( '#advanced-shortcode-attr-toggle' ) );	});		// alter link should open in new tab or not	jQuery( 'body' ).on( 'change' , '#open-icon-link-in-new-tab' , function() {		if( jQuery( '#icon-link' ).val().trim() != '' ) {			build_the_icon_shortcode( jQuery( '#advanced-shortcode-attr-toggle' ) );		}	});		// alter how many times the icon should repeat	jQuery( 'body' ).on( 'change' , '.wp-svg-icons-repeat-icon' , function() {		build_the_icon_shortcode( jQuery( '#advanced-shortcode-attr-toggle' ) );	});		// alter how many degrees the icon should rotate	jQuery( 'body' ).on( 'change' , '.wp-svg-icons-rotate-icon' , function() {		build_the_icon_shortcode( jQuery( '#advanced-shortcode-attr-toggle' ) );	});		// alter the animation that is set to this icon	jQuery( 'body' ).on( 'change' , '#animate-icon' , function() {		build_the_icon_shortcode( jQuery( '#advanced-shortcode-attr-toggle' ) );		runAnimationPreview( '.wp-svg-icon-preview > span:first-child' );	});		// alter when the animation should run	jQuery( 'body' ).on( 'change' , '#animate-icon-on' , function() {		build_the_icon_shortcode( jQuery( '#advanced-shortcode-attr-toggle' ) );	});				// Icon Container Alignment Buttons	jQuery( 'body' ).on( 'click' , '.container-alignment-button' , function() {		jQuery( '.container-alignment-button' ).removeClass( 'alignment-btn-active' );		jQuery( this ).addClass( 'alignment-btn-active' );		// reconstruct the shortcode		buildIconContainerShortCode();	});		});						// insert our icon into the editorfunction insert_wp_SVG_icon_to_editor() {		var icon_code = jQuery( '.copy_paste_input' ).text();		tb_remove();		window.send_to_editor( icon_code );		event.preventDefault();	}	// click the tab nav, to toggle between default and custom pcaks on edit.phpfunction load_custom_pack( e ) {				jQuery( '.nav-tab' ).removeClass( 'nav-tab-active' );		jQuery( e ).addClass( 'nav-tab-active' );					if( jQuery( '.custom-pack-container-ajax' ).is( ":empty" ) ) {										jQuery( '.wp-svg-iconset1-all-glyphs' ).fadeOut( 'fast' , function() {						jQuery(".custom-pack-container-ajax").load( localized_data.site_url + "/wp-content/uploads/wp-svg-icons/custom-pack/demo.html" ); 						jQuery.get( localized_data.site_url + "/wp-content/uploads/wp-svg-icons/custom-pack/style.css", function( data ) { 							jQuery("head").append("<style>"+data+"</style>"); 						}); 					});												jQuery('.custom-pack-container-ajax').on( 'click' , '.glyph' , function() {							jQuery('.glyph').removeClass("selected");							jQuery(this).addClass("selected");							jQuery('html, body').animate({ scrollTop: 0 }, 'slow');														var glyphCode = jQuery(this).find('.mls').text();							var newGlyphCode = glyphCode.replace( 'wp-svg-' , '' );													var glyphCode = jQuery.trim(glyphCode);							glyphCode = glyphCode.replace( 'wp-svg-custom-' , '' );							var selectedIconWrapper = jQuery( '.selected-element-wrap' ).attr( 'alt' );														// Fade in the insert icon button							if( jQuery( '#TB_ajaxContent' ).is( ':visible' ) ) {								jQuery( '.insert-wp-svg-icon' ).fadeIn();								jQuery('#TB_ajaxContent').animate({ scrollTop: 0 }, 'slow'); // scroll thickbox back up							} else {								jQuery('html, body').animate({ scrollTop: 0 }, 'slow'); // scroll html body							}														// fade in the advanced attributes button							jQuery( '#advanced-attr-toggle-list-item' ).fadeIn();							jQuery( '#hover-styles-toggle-list-item' ).fadeIn();														//console.log(glyphCode);							jQuery('.copy_paste_input').text('[wp-svg-icons custom_icon="'+glyphCode.trim()+'" wrap="'+selectedIconWrapper+'"]');							jQuery('.wp-svg-icon-preview').remove();							jQuery('.wp-svg-icon-preview-box > i').after("<b class='wp-svg-icon-preview'><span class='wp-svg-custom-"+glyphCode+" "+glyphCode+" previewIcon' style='display:none;'></span></b>");							jQuery('.previewIcon').fadeIn();														if( jQuery( '#hover-styles-toggle' ).hasClass( 'yes-adv-attr' ) ) {								buildIconContainerShortCode();							} else {								build_the_icon_shortcode( jQuery( '#advanced-shortcode-attr-toggle' ) );							}													});														} else {					jQuery( '.wp-svg-iconset1-all-glyphs' ).fadeOut( 'fast' , function() {						jQuery(".custom-pack-container-ajax").fadeIn();					});				}			}function show_defualt_pack( e ) {		if( jQuery( '.default-icon-pack ' ).hasClass( 'nav-tab-active' ) ) {			return false;		} else {			jQuery( '.nav-tab' ).removeClass( 'nav-tab-active' );			jQuery( e ).addClass( 'nav-tab-active' );			jQuery( '.custom-pack-container-ajax' ).fadeOut( 'fast' , function() {				jQuery( '.wp-svg-iconset1-all-glyphs' ).fadeIn( 'fast' );			});		}	}		function build_the_icon_shortcode( e ) {							// store the element wrap variable	var element_wrap = jQuery( '.element_selection_container' ).find( '.selected-element-wrap' ).attr( 'alt' );	var icon_name = jQuery( '.glyph.selected' ).find( '.mls' ).text().replace( 'wp-svg-' , '' ).replace( 'custom-' , '' ).trim();		// check if were on a custom icon pack, or the default icon pack	if ( jQuery( '.custom-pack-tab' ).hasClass( 'nav-tab-active' ) ) {			var active_tab = 'custom';		jQuery( '.wp-svg-icon-preview' ).html( '<span class="wp-svg-iconset1-preview wp-svg-custom-'+icon_name+' '+icon_name+'"></span>' );	} else {		var active_tab = 'default';		jQuery( '.wp-svg-icon-preview' ).html( '<span class="wp-svg-iconset1-preview wp-svg-'+icon_name+' '+icon_name+'"></span>' );	}		if( jQuery( e ).hasClass( 'yes-adv-attr' ) ) {		var selected_element = jQuery( '.glyph.selected' ).length;		if( selected_element > 0 ) { // check if an icon was selected								// create an array for our attributes			var custom_shortcode_attr_array = [];						var custom_icon_size = jQuery( '#icon-size-input' ).val();						var custom_icon_link = jQuery( '#icon-link' ).val();			var open_link_in_new_tab = jQuery( '#open-icon-link-in-new-tab' ).prop( 'checked' );			var custom_icon_color = jQuery( '.wp-svg-icons-custom-color-picker' ).val();						jQuery( '.wp-svg-icon-preview > span:first-child' ).css( 'color' , custom_icon_color );						var repeat_icon_number = jQuery( '.wp-svg-icons-repeat-icon' ).val();			var rotate_icon_number = jQuery( '.wp-svg-icons-rotate-icon' ).val();						var selected_animation_group =  jQuery( '#animate-icon :selected' ).parents( 'optgroup' ).attr( 'label' );						var selected_animation = jQuery( '#animate-icon :selected' ).val();						if( selected_animation_group ) {				var animation_type = selected_animation_group.split( ' ' )[1];				if( typeof animation_type == 'undefined' ) {					animation_type = '';				}			}						var animation = jQuery( '#animate-icon' ).val();			var animate_on = jQuery( '#animate-icon-on' ).val();						var shortcode = jQuery( '.copy_paste_input' ).text();						// icon name 			if( icon_name ) {				if( active_tab == 'custom' ) {					custom_shortcode_attr_array.push( 'custom_icon="'+icon_name+'"' );				} else { // defualt icon					custom_shortcode_attr_array.push( 'icon="'+icon_name+'"' );				}			}						// element icon wrap			if( element_wrap ) {				custom_shortcode_attr_array.push( 'wrap="'+element_wrap+'"' );			}						// custom icon size			if( custom_icon_size ) {				custom_shortcode_attr_array.push( 'size="'+custom_icon_size+'"' );			}									// icon link			if( custom_icon_link ) {				custom_shortcode_attr_array.push( 'link="'+custom_icon_link+'"' );			}						// icon link in new tab			if( open_link_in_new_tab && custom_icon_link ) {				custom_shortcode_attr_array.push( 'new_tab="1"' );			}						// custom icon color			if( custom_icon_color ) {				custom_shortcode_attr_array.push( 'color="'+custom_icon_color+'"' );			}						// icon repeat			if( repeat_icon_number ) {					if( repeat_icon_number != '0' ) {					custom_shortcode_attr_array.push( 'repeat="'+repeat_icon_number+'"' );				}			}						// icon rotate			if( rotate_icon_number ) {					if( rotate_icon_number != '0' ) {					custom_shortcode_attr_array.push( 'rotate="'+rotate_icon_number+'"' );				}			}						// icon animation			// delete some of this empty space, 			// its scary!			if( animation ) {								if( animation != 'no_animation' ) {									custom_shortcode_attr_array.push( 'animation="'+animation+'"' ); // push our animation class to the array									if( selected_animation.indexOf("In") !== -1 && selected_animation != 'hinge' && ( animate_on == 'scroll'  || animate_on == 'load' ) ) {						var classes = jQuery( '#icon-class-names-input' ).val().trim().split( ' ' ); // store classes into an array												// store classes into string for comparison										var classes_text = jQuery( '#icon-class-names-input' ).val().trim(); 												if( classes.length == 1 ) {													// add our hidden class							jQuery( '#icon-class-names-input' ).val( 'hidden' );							// store the new class text value for comparison							var new_classes_text =  jQuery( '#icon-class-names-input' ).val().trim();													} else {													// check if hidden exists in the class array							if( classes.indexOf( 'hidden' ) == -1 ) {								jQuery( '#icon-class-names-input' ).val( classes.join(' ') + ' hidden' );							}													}																						} else { // lets remove the 'hidden' class for the users to prevent support requests like : "Why isnt my icon appearing?!"												// split and store the classes input value						var classes = jQuery( '#icon-class-names-input' ).val().trim().split( ' ' );												// store classes into string for comparison										var classes_text = jQuery( '#icon-class-names-input' ).val().trim(); 												// check for the hidden class in our array						var index_of_hidden_class = classes.indexOf( 'hidden' );												if( index_of_hidden_class > -1 ) {							classes.splice( index_of_hidden_class , 1 );							jQuery( '#icon-class-names-input' ).val( '' );							jQuery( '#icon-class-names-input' ).val( classes.join(' ') );						}																	}											// push our animation to the array					custom_shortcode_attr_array.push( 'animate_on="'+animate_on+'"' );									}			}						// custom_icon_class needs to be stored last 			// or else the hidden class doesn't properly get			// apended on the correct animations (all In animations)			var custom_icon_class = jQuery( '#icon-class-names-input' ).val().trim();						// icon class			if( custom_icon_class ) {				custom_shortcode_attr_array.push( 'class="'+custom_icon_class+'"' );			}						jQuery( '.copy_paste_input' ).text( '[wp-svg-icons '+custom_shortcode_attr_array.join( ' ' )+']' );					}	} else { 		if( active_tab == 'custom' ) {			// store default			jQuery( '.copy_paste_input' ).text( '[wp-svg-icons custom_icon="'+icon_name.replace( 'wp-svg-' , 'wp-svg-custom-' )+'" wrap="'+element_wrap+'"]' );		} else {			// store default			jQuery( '.copy_paste_input' ).text( '[wp-svg-icons icon="'+icon_name+'" wrap="'+element_wrap+'"]' );		}			}		}	/* Animation inside Preview Container ! */	function runAnimationPreview( element_to_preview ) {		element_to_preview = jQuery( element_to_preview );		if( jQuery( '#advanced-shortcode-attr-toggle' ).hasClass( 'yes-adv-attr' ) ) {			animation = jQuery( '#animate-icon' ).val();		} else {			animation = jQuery( '#animate-icon-container' ).val();		}		element_to_preview.addClass( 'wp-svg-iconset1-preview animated '+animation );		element_to_preview.bind("animationend webkitAnimationEnd oAnimationEnd MSAnimationEnd", function() {			element_to_preview.removeClass( 'animated '+animation );		});	};		/* Slide Toggle Advanced Attr */	function toggleAdvancedContainers( container, e ) {		if( container == '#advanced-shortcode-attr-list' ) {			jQuery( '#hover-style-attr-list' ).slideUp();			jQuery( '#hover-styles-toggle' ).removeClass( 'yes-adv-attr' );			jQuery( e ).toggleClass( 'yes-adv-attr' );			build_the_icon_shortcode( jQuery( '#advanced-shortcode-attr-toggle' ) );		} else {			jQuery( '#advanced-shortcode-attr-list' ).slideUp();			jQuery( '#advanced-shortcode-attr-toggle' ).removeClass( 'yes-adv-attr' );			jQuery( e ).toggleClass( 'yes-adv-attr' );			buildIconContainerShortCode();		}		jQuery( container ).slideToggle();		return false;	}			// regenerate the preview for the user	// and our shortcode	// after an attr was changed	function buildIconContainerShortCode() {				// get the selected icon right here		if( jQuery( '.wp-svg-iconset1-all-glyphs' ).is( ':visible' ) ) {				// default icon is selected			var icon = jQuery( '.wp-svg-iconset1-all-glyphs' ).find( '.glyph.selected' ).find( '.mls' ).text().trim().replace( 'wp-svg-' , '' );			var icon_class = 'icon="'+icon+'"';		} else {			// custom icon is selected			var icon = jQuery( '.custom-pack-container-ajax' ).find( '.glyph.selected' ).find( 'span:first-child' ).attr( 'class' );			var icon_class = 'custom_icon="'+icon+'"';		}				var container_style = jQuery( '#hover-icon-container-select' ).val(); // store the container style		var container_style_text = jQuery( '#hover-icon-container-select option:selected' ).text(); // store the text value of the container style		var style_number = jQuery( '#hover-icon-container-select option:selected' ).parents( 'optgroup' ).attr( 'alt' ); // store the style container number		var icon_size = jQuery( '#hover-styles-icon-size-input' ).val(); // store the icon size		var class_names = jQuery( '#hover-icon-class-names-input' ).val().trim(); // store the additional class names		var container_link = jQuery( '#hover-icon-link' ).val().trim(); // store the container link in a variable		var container_in_new_link = jQuery( '#open-icon-container-link-in-new-tab' ).prop( 'checked' ); // store the open container in new link variable		var icon_color = jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-custom-color-picker' ).val(); // store icon color		var container_bg_color = jQuery( '.wp-svg-icons-container-bg-color-picker' ).val(); // store container bg color		var icon_color_hover_state = jQuery( '.wp-svg-icons-hover-state-custom-color-picker' ).val(); // store icon color hover state		var container_bg_hover_state = jQuery( '.wp-svg-icons-hover-state-container-bg-color-picker' ).val(); // store container bg hover state		var container_animation = jQuery( '#animate-icon-container' ).val(); // store container animation		var container_animate_on = jQuery( '#animate-icon-container-on' ).val(); // store container ainamate on		var container_alignment = jQuery( '.alignment-btn-active' ).attr( 'alt' );				// define an empty array		var shortcode_attr_parameter_array = [];				shortcode_attr_parameter_array.push( icon_class );				// push the container style		if( container_style != 'no_animation' ) {			container_text = container_style_text.split( ' ' );			shortcode_attr_parameter_array.push( 'container="'+style_number + '-' + container_text[1].trim()+'"' ); // tsore the # and the letter ( eg: 1-a )		} else {			shortcode_attr_parameter_array.push( 'container="no_animation"' );		}				// push class names		if( class_names ) {			shortcode_attr_parameter_array.push( 'class="'+class_names+'"' );		}				if( container_alignment != 'none' ) {			shortcode_attr_parameter_array.push( 'align="'+container_alignment+'"' );		}				// push the container link		if( container_link ) {						shortcode_attr_parameter_array.push( 'link="'+container_link+'"' );			// toggle container link open in new tab			if( container_in_new_link ) {				shortcode_attr_parameter_array.push( 'new_tab="1"' );			}		}				// push the icon color to our array		if( icon_color ) {			shortcode_attr_parameter_array.push( 'icon_color="'+icon_color+'"' );		}		// push the icon container background color to our array		if( container_bg_color ) {			shortcode_attr_parameter_array.push( 'container_bg="'+container_bg_color+'"' );		}		// push the icon hover color to our array		if( icon_color_hover_state ) {			shortcode_attr_parameter_array.push( 'icon_hover_color="'+icon_color_hover_state+'"' );		}		// push the icon container color bg hover to our array		if( container_bg_hover_state ) {			shortcode_attr_parameter_array.push( 'container_hover_bg="'+container_bg_hover_state+'"' );		}		// push the container animation		if( container_animation != 'no_animation' ) {			shortcode_attr_parameter_array.push( 'animation="'+container_animation+'"' );			shortcode_attr_parameter_array.push( 'animate_on="'+container_animate_on+'"' );		}				jQuery( '.wp-svg-icon-preview' ).html( '<div class="wp-svg-icon-preview-box-hi-icon-wrap hi-icon-wrap '+container_style+'"><a href="#" onclick="return false;" class="wp-svg-icon wp-svg-'+icon+' '+icon+'"></a></div>' );						if( container_animation.indexOf("In") !== -1 && container_animation != 'hinge' && ( container_animate_on == 'scroll'  || container_animate_on == 'load' ) ) {			var classes = jQuery( '#hover-icon-class-names-input' ).val().trim().split( ' ' ); // store classes into an array			// store classes into string for comparison							var classes_text = jQuery( '#hover-icon-class-names-input' ).val().trim(); 			if( classes.length == 1 ) {				// add our hidden class				jQuery( '#hover-icon-class-names-input' ).val( 'hidden' );			} else {				// check if hidden exists in the class array				if( classes.indexOf( 'hidden' ) == -1 ) {					jQuery( '#hover-icon-class-names-input' ).val( classes.join(' ') + ' hidden' );				}			}		} else { // lets remove the 'hidden' class for the users to prevent support requests like : "Why isnt my icon appearing?!"						// split and store the classes input value			var classes = jQuery( '#hover-icon-class-names-input' ).val().trim().split( ' ' );				// store classes into string for comparison							var classes_text = jQuery( '#hover-icon-class-names-input' ).val().trim(); 						// check for the hidden class in our array			var index_of_hidden_class = classes.indexOf( 'hidden' );									if( index_of_hidden_class > -1 ) {				classes.splice( index_of_hidden_class , 1 );				jQuery( '#hover-icon-class-names-input' ).val( '' );				jQuery( '#hover-icon-class-names-input' ).val( classes.join(' ') );			}		}							var styles;		// build preview styles		// each style has different styles...		switch( style_number ) {						case '1':				jQuery( '.hover-state-color-picker' ).fadeIn();				styles = "<style>"+									// Default Styles								".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon {"+									"color:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-custom-color-picker' ).val()+";"+									"background:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-container-bg-color-picker' ).val()+";"+								"}"+								// Hover Styles								".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon:hover {"+									"color:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-custom-color-picker' ).val()+";"+									"background:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-container-bg-color-picker' ).val()+";"+								"}"+								// :after pseudo class hover styles								".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon:after {"+									"box-shadow: 0 0 0 4px "+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-container-bg-color-picker' ).val()+";"+								"}"+							"</style>";				break;						case '2':					jQuery( '.hover-state-color-picker' ).fadeOut();				styles = "<style>"+									// Hover Styles								".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon:hover {"+									"color:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-custom-color-picker' ).val()+";"+									"}"+								// :after pseudo class hover styles								".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon:after {"+									"background: "+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-container-bg-color-picker' ).val()+";"+								"}"+								// :after pseudo class hover styles								".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon {"+									"color:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-custom-color-picker' ).val()+";"+										"box-shadow: 0 0 0 3px "+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-container-bg-color-picker' ).val()+";"+								"}"+							"</style>";				break;							case '3':					jQuery( '.hover-state-color-picker' ).fadeOut();				if( container_style_text == 'Effect A' ) {					styles = "<style>"+										// Default Styles									".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon {"+										"color:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-custom-color-picker' ).val()+";"+										"background:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-container-bg-color-picker' ).val()+";"+										"box-shadow: 0 0 0 4px "+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-container-bg-color-picker' ).val()+";"+									"}"+									// Hover Styles									".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon:hover {"+										"color:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-custom-color-picker' ).val()+";"+										"background: transparent !important;"+									"}"+									// :after pseudo class hover styles									".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon:after {"+										"background:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-container-bg-color-picker' ).val()+";"+									"}"+								"</style>";				} else {					styles = "<style>"+										// Default Styles									".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon {"+										"color:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-custom-color-picker' ).val()+";"+										"background: transparent !important;"+ // <== only difference between Effect A & Effect B										"box-shadow: 0 0 0 4px "+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-container-bg-color-picker' ).val()+";"+									"}"+									// Hover Styles									".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon:hover {"+										"color:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-custom-color-picker' ).val()+";"+										"background: transparent !important;"+									"}"+									// :after pseudo class hover styles									".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon:after {"+										"background:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-container-bg-color-picker' ).val()+";"+									"}"+								"</style>";				}				break;								case '4':						jQuery( '.hover-state-color-picker' ).fadeOut();					styles = "<style>"+										// Hover Styles									".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon:hover {"+										"color:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-custom-color-picker' ).val()+";"+										"}"+									// :after pseudo class hover styles									".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon:after {"+										"background: transparent !important;"+										"border: 4px dashed "+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-container-bg-color-picker' ).val()+";"+									"}"+									// :after pseudo class hover styles									".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon {"+										"color:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-custom-color-picker' ).val()+";"+											"box-shadow: 0 0 0 4px "+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-container-bg-color-picker' ).val()+";"+									"}"+								"</style>";					break;									case '5':					jQuery( '.hover-state-color-picker' ).fadeIn();					styles = "<style>"+										// Default Styles									".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon {"+										"color:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-custom-color-picker' ).val()+";"+										"background:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-container-bg-color-picker' ).val()+";"+									"}"+									// Hover Styles									".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon:hover {"+										"color:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-custom-color-picker' ).val()+";"+										"background:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-container-bg-color-picker' ).val()+";"+										"box-shadow: 0 0 0 8px "+convertHex( jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-container-bg-color-picker' ).val() , 25 )+";"+									"}"+									// :after pseudo class hover styles									".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon:after {"+										"box-shadow: 0 0 0 4px "+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-container-bg-color-picker' ).val()+";"+									"}"+								"</style>";					break;									case '6':					jQuery( '.hover-state-color-picker' ).fadeIn();					styles = "<style>"+										// Default Styles									".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon {"+										"color:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-custom-color-picker' ).val()+";"+										"background:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-container-bg-color-picker' ).val()+";"+										"box-shadow: 0 0 0 4px "+ jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-container-bg-color-picker' ).val() +";"+									"}"+									// Hover Styles									".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon:hover {"+										"color:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-custom-color-picker' ).val()+";"+										"background:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-container-bg-color-picker' ).val()+";"+										"box-shadow: 0 0 0 4px "+ jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-container-bg-color-picker' ).val() +";"+									"}"+								"</style>";					break;									case '7':					jQuery( '.hover-state-color-picker' ).fadeIn();					styles = "<style>"+										// Default Styles									".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon {"+										"color:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-custom-color-picker' ).val()+";"+										"background: "+ jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-container-bg-color-picker' ).val() +";"+										"box-shadow: 0 0 0 4px "+ jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-container-bg-color-picker' ).val() +";"+									"}"+									".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon:after {"+										"box-shadow: 0 0 0 "+ jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-container-bg-color-picker' ).val() +";"+									"}"+									// Hover Styles									".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon:hover {"+										"color:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-custom-color-picker' ).val()+";"+										"background: "+ jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-container-bg-color-picker' ).val() +";"+										"box-shadow: 0 0 0 4px "+ jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-container-bg-color-picker' ).val() +";"+									"}"+									".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon:hover:after {"+										"box-shadow: 3px 3px 0 "+ jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-container-bg-color-picker' ).val() +";"+									"}"+								"</style>";					break;									case '8':					jQuery( '.hover-state-color-picker' ).fadeIn();					styles = "<style>"+										// Default Styles									".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon {"+										"color:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-custom-color-picker' ).val()+";"+										"background: transparent !important;"+										"box-shadow: 0 0 0 4px "+ jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-container-bg-color-picker' ).val() +";"+									"}"+									".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon:after {"+										"box-shadow: 0 0 0 "+ jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-container-bg-color-picker' ).val() +";"+									"}"+									// Hover Styles									".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon:hover {"+										"color:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-custom-color-picker' ).val()+";"+										"background: transparent !important;"+										"box-shadow: 0 0 0 4px "+ jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-container-bg-color-picker' ).val() +";"+									"}"+									".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon:hover:after {"+										"box-shadow: 3px 3px 0 "+ jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-container-bg-color-picker' ).val() +";"+									"}"+									"@-webkit-keyframes sonarEffect {"+										"0% {"+											"opacity: 0.3;"+										"}"+										"40% {"+											"opacity: 0.5;"+											"box-shadow: 0 0 0 2px rgba(255,255,255,0.1), 0 0 10px 10px "+ jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-container-bg-color-picker' ).val() +", 0 0 0 10px rgba(255,255,255,0.5);"+										"}"+										"100% {"+											"box-shadow: 0 0 0 2px rgba(255,255,255,0.1), 0 0 10px 10px "+ jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-container-bg-color-picker' ).val() +", 0 0 0 10px rgba(255,255,255,0.5);"+											"-webkit-transform: scale(1.5);"+											"opacity: 0;"+										"}"+									"}"+									"@-moz-keyframes sonarEffect {"+										"0% {"+											"opacity: 0.3;"+										"}"+										"40% {"+											"opacity: 0.5;"+											"box-shadow: 0 0 0 2px rgba(255,255,255,0.1), 0 0 10px 10px "+ jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-container-bg-color-picker' ).val() +", 0 0 0 10px rgba(255,255,255,0.5);"+										"}"+										"100% {"+											"box-shadow: 0 0 0 2px rgba(255,255,255,0.1), 0 0 10px 10px "+ jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-container-bg-color-picker' ).val() +", 0 0 0 10px rgba(255,255,255,0.5);"+											"-moz-transform: scale(1.5);"+											"opacity: 0;"+										"}"+									"}"+									"@keyframes sonarEffect {"+										"0% {"+											"opacity: 0.3;"+										"}"+										"40% {"+											"opacity: 0.5;"+											"box-shadow: 0 0 0 2px rgba(255,255,255,0.1), 0 0 10px 10px "+ jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-container-bg-color-picker' ).val() +", 0 0 0 10px rgba(255,255,255,0.5);"+										"}"+										"100% {"+											"box-shadow: 0 0 0 2px rgba(255,255,255,0.1), 0 0 10px 10px "+ jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-container-bg-color-picker' ).val() +", 0 0 0 10px rgba(255,255,255,0.5);"+											"transform: scale(1.5);"+											"opacity: 0;"+										"}"+									"}"+								"</style>";					break;										case '9':						jQuery( '.hover-state-color-picker' ).fadeIn();						if( container_style_text == 'Effect A' ) {							styles = "<style>"+												// Default Styles											".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon {"+												"color:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-custom-color-picker' ).val()+";"+											"}"+											// Hover Styles											".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon:hover {"+												"color:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-custom-color-picker' ).val()+";"+												"box-shadow: 0 0 0 8px "+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-container-bg-color-picker' ).val()+";"+											"}"+											// :after pseudo class hover styles											".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon:after {"+												"box-shadow: 0 0 0 3px "+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-container-bg-color-picker' ).val()+";"+											"}"+										"</style>";						} else {							styles = "<style>"+												// Default Styles											".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon {"+												"color:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-custom-color-picker' ).val()+";"+											"}"+											// Hover Styles											".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon:hover {"+												"color:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-custom-color-picker' ).val()+";"+												"box-shadow: 0 0 0 8px "+ convertHex( jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-container-bg-color-picker' ).val() , 20 ) +";"+ // only difference between A & B, the box shadow opacity..											"}"+											// :after pseudo class hover styles											".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon:after {"+												"box-shadow: 0 0 0 3px "+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-container-bg-color-picker' ).val()+";"+											"}"+										"</style>";						}						break;												/* no_animation */						default:						 styles = "<style>"+									// Default Styles								".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon {"+									"color:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-custom-color-picker' ).val()+";"+									"background:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-container-bg-color-picker' ).val()+";"+									"-moz-transition: all .3s ease-in;"+									"-o-transition: all .3s ease-in;"+									"-webkit-transition: all .3s ease-in;"+									"transition: all .3s ease-in;"+								"}"+								// Hover Styles								".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon:hover {"+									"color:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-custom-color-picker' ).val()+";"+									"background:"+jQuery( '#hover-style-attr-list' ).find( '.wp-svg-icons-hover-state-container-bg-color-picker' ).val()+";"+								"}"+								// :after pseudo class hover styles								".wp-svg-icon-preview-box-hi-icon-wrap .wp-svg-icon:after {"+									"box-shadow: none;"+								"}"+							"</style>";							break;							break;					}		jQuery( '.wp-svg-icon-preview-box-hover-styles' ).html( styles );		console.log( shortcode_attr_parameter_array );		if( jQuery( '#hover-styles-toggle' ).hasClass( 'yes-adv-attr' ) ) {			jQuery( '.copy_paste_input' ).text( '[wp-svg-icons-hover-container '+shortcode_attr_parameter_array.join( ' ' )+' icon_size="'+icon_size+'"][/wp-svg-icons-hover-container]' );		} else {				var iconClass = jQuery( '.glyph.selected' ).find( '.mls' ).text().replace( 'wp-svg-custom-' , '' ).replace( 'wp-svg-' , '' );			var selectedIconWrapper = jQuery( '.selected-element-wrap' ).attr( 'alt' );			if ( jQuery( '.custom-pack-tab' ).hasClass( 'nav-tab-active' ) ) {					jQuery('.copy_paste_input').text('[wp-svg-icons icon="'+iconClass.trim()+'" wrap="'+selectedIconWrapper+'"]');			} else {				jQuery('.copy_paste_input').text('[wp-svg-icons custom_icon="'+iconClass.trim()+'" wrap="'+selectedIconWrapper+'"]');			}		}	}			/* Convert HEX to RGBA value */	function convertHex(hex,opacity){		hex = hex.replace('#','');		r = parseInt(hex.substring(0,2), 16);		g = parseInt(hex.substring(2,4), 16);		b = parseInt(hex.substring(4,6), 16);		result = 'rgba('+r+','+g+','+b+','+opacity/100+')';		return result;	}